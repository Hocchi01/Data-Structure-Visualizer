<Window
    x:Class="DataStructureVisualizer.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:anim="clr-namespace:DataStructureVisualizer.Common.AnimationLib"
    xmlns:ctrl="clr-namespace:System.Windows.Controls;assembly=PresentationFramework"
    xmlns:cvtr="clr-namespace:DataStructureVisualizer.Common.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:enum="clr-namespace:DataStructureVisualizer.Common.Enums"
    xmlns:local="clr-namespace:DataStructureVisualizer"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:rules="clr-namespace:DataStructureVisualizer.Common.Rules"
    xmlns:vm="clr-namespace:DataStructureVisualizer.ViewModels"
    Title="MainWindow"
    Width="1000"
    Height="450"
    Background="{DynamicResource MaterialDesignPaper}"
    FontFamily="{materialDesign:MaterialDesignFont}"
    MouseLeftButtonDown="Window_MouseLeftButtonDown"
    TextElement.FontSize="14"
    TextElement.FontWeight="Medium"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <Window.DataContext>
        <vm:MainWindowViewModel />
    </Window.DataContext>
    <Window.Resources>
        <ctrl:BooleanToVisibilityConverter x:Key="b2vCvtr" />
        <cvtr:AnimationStateToBooleanConverter x:Key="as2bCvtr" />

        <!--  控制【动画控制面板】升降  -->
        <Storyboard x:Key="downStoryboard">
            <DoubleAnimation
                AccelerationRatio="0.5"
                DecelerationRatio="0.5"
                Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                To="70"
                Duration="0:0:0.5" />
        </Storyboard>
        <Storyboard x:Key="upStoryboard">
            <DoubleAnimation
                AccelerationRatio="0.5"
                DecelerationRatio="0.5"
                Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                To="0"
                Duration="0:0:0.5" />
        </Storyboard>

        <!--  控制【动画控制面板】中【播放/暂停按钮】图标切换  -->
        <Style x:Key="playOrPauseBtnStyle" TargetType="materialDesign:PackIcon">
            <Setter Property="Kind" Value="Play" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding AnimationControlPanel.State}" Value="{x:Static enum:AnimationState.Running}">
                    <Setter Property="Kind" Value="Pause" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <!--  控制【控制台】升降  -->
        <Style x:Key="upOrDownConsoleStyle" TargetType="Grid">
            <Style.Triggers>
                <DataTrigger Binding="{Binding AnimationControlPanel.State, Converter={StaticResource as2bCvtr}, ConverterParameter=IsBegin}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                    AccelerationRatio="0.5"
                                    DecelerationRatio="0.5"
                                    To="1"
                                    Duration="0:0:0.5" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                    AccelerationRatio="0.5"
                                    DecelerationRatio="0.5"
                                    To="0"
                                    Duration="0:0:0.5" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <!--  左侧边栏：主导航 + 设置按钮  -->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <TabControl
                x:Name="mainNavigation"
                materialDesign:NavigationRailAssist.ShowSelectionBackground="True"
                ItemsSource="{Binding Navigation.MainItems}"
                SnapsToDevicePixels="True"
                Style="{StaticResource MaterialDesignNavigationRailTabControl}"
                TabStripPlacement="Left">
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Width="auto" Height="auto">
                            <materialDesign:PackIcon
                                Width="24"
                                Height="24"
                                HorizontalAlignment="Center"
                                Kind="{Binding IconKind}" />
                            <TextBlock HorizontalAlignment="Center" Text="{Binding Name}" />
                        </StackPanel>
                    </DataTemplate>
                </TabControl.ItemTemplate>
                <TabControl.ContentTemplate>
                    <!--  这里页面模板设为空，因为只需要使用导航部分  -->
                    <DataTemplate />
                </TabControl.ContentTemplate>
            </TabControl>
            <!--  由于 TabControl 右侧自带边框，因此需要设置与它一致的边框使其一体化  -->
            <Border
                Grid.Row="1"
                BorderBrush="#DCDCDC"
                BorderThickness="0,0,1,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Separator Grid.Row="0" Background="Transparent" />
                    <Button
                        x:Name="setting"
                        Grid.Row="1"
                        Margin="7"
                        HorizontalAlignment="Center"
                        Style="{StaticResource MaterialDesignIconButton}">
                        <materialDesign:PackIcon
                            Width="28"
                            Height="28"
                            Kind="Cog" />
                    </Button>
                </Grid>
            </Border>
        </Grid>

        <!--  中间主页区域：子导航 + 展示区 + 动画控制器  -->
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!--  子导航  -->
            <!--  bug: 无法拖动该区域移动窗口  -->
            <TabControl
                HorizontalContentAlignment="Left"
                materialDesign:ElevationAssist.Elevation="Dp0"
                ItemsSource="{Binding SelectedItem.Children, ElementName=mainNavigation}"
                SelectedItem="{Binding Navigation.Selected_DS}"
                Style="{StaticResource MaterialDesignFilledTabControl}">
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </TabControl.ItemTemplate>
                <TabControl.ContentTemplate>
                    <DataTemplate />
                    <!--<DataTemplate>
                        <ContentControl Content="{Binding CanvasView}" />
                    </DataTemplate>-->
                </TabControl.ContentTemplate>
            </TabControl>

            <!--  主画板  -->
            <ContentControl Grid.Row="1" Content="{Binding CurrentCanvasView}" />

            <!--  动画控制器  -->
            <Grid
                x:Name="animationControlPanel"
                Grid.Row="1"
                Height="70"
                VerticalAlignment="Bottom"
                Background="White">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding AnimationControlPanel.State}" Value="{x:Static enum:AnimationState.Stopped}">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource downStoryboard}" />
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource upStoryboard}" />
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.RenderTransform>
                    <TranslateTransform Y="70" />
                </Grid.RenderTransform>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <ProgressBar IsIndeterminate="{Binding AnimationControlPanel.State, Converter={StaticResource as2bCvtr}, ConverterParameter=IsRunning}" />
                <StackPanel
                    Grid.Row="1"
                    HorizontalAlignment="Center"
                    Orientation="Horizontal">
                    <Button Style="{StaticResource MaterialDesignIconButton}">
                        <materialDesign:PackIcon Kind="ChevronDoubleLeft" />
                    </Button>
                    <Button
                        Margin="10,0"
                        Background="{DynamicResource MaterialDesignTextFieldBoxBackground}"
                        Command="{Binding AnimationControlPanel.PlayOrPauseCommand}"
                        Style="{StaticResource MaterialDesignIconButton}">
                        <materialDesign:PackIcon Style="{StaticResource playOrPauseBtnStyle}" />
                    </Button>
                    <Button Style="{StaticResource MaterialDesignIconButton}">
                        <materialDesign:PackIcon Kind="ChevronDoubleRight" />
                    </Button>
                </StackPanel>
            </Grid>

        </Grid>


        <!--  工具栏  -->
        <Grid
            Grid.Column="2"
            MinWidth="230"
            Margin="5,10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <!--  标题  -->
            <Border
                Margin="0,0,0,5"
                BorderBrush="{DynamicResource PrimaryHueMidBrush}"
                BorderThickness="1">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon
                        Width="24"
                        Height="24"
                        Margin="5"
                        Foreground="{DynamicResource PrimaryHueMidBrush}"
                        Kind="ToolboxOutline" />
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="18"
                        FontWeight="Black"
                        Foreground="{DynamicResource PrimaryHueMidBrush}"
                        Text="Toolbox" />
                </StackPanel>
            </Border>
            <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Hidden">
                <StackPanel ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <GroupBox
                        Margin="0,5"
                        materialDesign:ColorZoneAssist.Mode="SecondaryMid"
                        Header="Sort"
                        Style="{StaticResource MaterialDesignGroupBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ComboBox
                                materialDesign:HintAssist.Foreground="{DynamicResource SecondaryHueMidBrush}"
                                materialDesign:HintAssist.Hint="Type"
                                materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource SecondaryHueMidBrush}"
                                Style="{StaticResource MaterialDesignOutlinedComboBox}"
                                ItemsSource="{Binding Toolbox.SortTool.Sorts}"
                                SelectedItem="{Binding Toolbox.SortTool.SelectedSort}"
                                DisplayMemberPath="Name"/>
                            <Button
                                Grid.Column="1"
                                Margin="9,0,0,0"
                                Foreground="#FF00C853"
                                Command="{Binding Toolbox.SortTool.ExecuteFuncCommand}"
                                Style="{StaticResource MaterialDesignIconButton}">
                                <materialDesign:PackIcon Kind="PlayCircle" />
                            </Button>
                        </Grid>
                    </GroupBox>

                    <!--#region 随机生成工具-->
                    <GroupBox
                        Margin="0,5"
                        materialDesign:ColorZoneAssist.Mode="PrimaryMid"
                        Header="Random Generate">
                        <GroupBox.HeaderTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        DockPanel.Dock="Left"
                                        Text="{Binding}" />
                                    <Button
                                        Width="25"
                                        Height="25"
                                        Margin="10,0,-5,0"
                                        HorizontalAlignment="Right"
                                        Command="{Binding DataContext.Toolbox.RandomGenerateTool.SwitchMoreSettingVisibilityCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                        DockPanel.Dock="Right"
                                        Style="{StaticResource MaterialDesignIconForegroundButton}">
                                        <materialDesign:PackIcon
                                            Width="20"
                                            Height="20"
                                            Kind="Menu" />
                                    </Button>
                                </DockPanel>
                            </DataTemplate>
                        </GroupBox.HeaderTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <TextBox
                                materialDesign:HintAssist.Hint="Amount"
                                Style="{StaticResource MaterialDesignOutlinedTextBox}"
                                TextAlignment="Center">
                                <TextBox.Text>
                                    <Binding Path="Toolbox.RandomGenerateTool.Amount" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <rules:IntRangeValidationRule Max="100" Min="0" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <Button
                                Grid.Column="1"
                                Margin="5,0,-5,0"
                                Command="{Binding Toolbox.RandomGenerateTool.ExecuteFuncCommand}"
                                Style="{StaticResource MaterialDesignIconButton}">
                                <materialDesign:PackIcon Kind="Refresh" />
                            </Button>
                            <Grid
                                x:Name="rg_MoreSetting"
                                Grid.Row="1"
                                Grid.ColumnSpan="2"
                                Visibility="{Binding Toolbox.RandomGenerateTool.IsShowMoreSetting, Converter={StaticResource b2vCvtr}}">
                                <!--  Visibility="{Binding Toolbox.ToolExpandStates[RandomGenerate], Converter={StaticResource b2vCvtr}}"  -->
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="5" />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>
                                <TextBox materialDesign:HintAssist.Hint="Min" Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                                    <TextBox.Text>
                                        <Binding Path="Toolbox.RandomGenerateTool.Min" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <rules:IntRangeValidationRule Max="999" Min="-999" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBox
                                    Grid.Column="2"
                                    materialDesign:HintAssist.Hint="Max"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                                    <TextBox.Text>
                                        <Binding Path="Toolbox.RandomGenerateTool.Max" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <rules:IntRangeValidationRule Max="999" Min="-999" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </Grid>
                        </Grid>
                    </GroupBox>
                    <!--#endregion-->

                    <!--#region 添加工具-->
                    <GroupBox Margin="0,5" Header="Add">
                        <GroupBox.HeaderTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        DockPanel.Dock="Left"
                                        Text="Add" />
                                    <Button
                                        Width="25"
                                        Height="25"
                                        Margin="10,0,-5,0"
                                        HorizontalAlignment="Right"
                                        Command="{Binding DataContext.Toolbox.AddTool.SwitchMoreSettingVisibilityCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                        CommandParameter="Add"
                                        DockPanel.Dock="Right"
                                        Style="{StaticResource MaterialDesignIconForegroundButton}">
                                        <materialDesign:PackIcon
                                            Width="20"
                                            Height="20"
                                            Kind="Menu" />
                                    </Button>
                                </DockPanel>
                            </DataTemplate>
                        </GroupBox.HeaderTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!--<TextBox
                                materialDesign:HintAssist.Hint="Index"
                                Style="{StaticResource MaterialDesignOutlinedTextBox}"
                                TextAlignment="Center">
                                <TextBox.Text>
                                    <Binding Path="Toolbox.AddTool.Index" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <rules:IntRangeValidationRule Max="99999" Min="0" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>-->

                            <ComboBox
                                materialDesign:HintAssist.Hint="Index"
                                ItemsSource="{Binding Toolbox.AddTool.Indices}"
                                SelectedItem="{Binding Toolbox.AddTool.Index}"
                                Style="{StaticResource MaterialDesignOutlinedComboBox}">
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>


                            <TextBox
                                Grid.Column="2"
                                materialDesign:HintAssist.Hint="Value"
                                Style="{StaticResource MaterialDesignOutlinedTextBox}"
                                TextAlignment="Center">
                                <TextBox.Text>
                                    <Binding Path="Toolbox.AddTool.Value" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <rules:IntRangeValidationRule Max="999" Min="-999" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <Button
                                x:Name="addToolBtn"
                                Grid.Column="4"
                                Margin="0,0,-5,0"
                                Command="{Binding Toolbox.AddTool.ExecuteFuncCommand}"
                                Style="{StaticResource MaterialDesignIconButton}">
                                <materialDesign:PackIcon Kind="PlusBox" />
                            </Button>
                        </Grid>
                    </GroupBox>
                    <!--#endregion-->
                </StackPanel>
            </ScrollViewer>

        </Grid>

        <!--  控制台  -->
        <Grid
            x:Name="logPanel"
            Grid.RowSpan="2"
            Grid.Column="2"
            MinWidth="230"
            Background="{DynamicResource MaterialDesignDarkBackground}"
            RenderTransformOrigin="0.5,1"
            Style="{StaticResource upOrDownConsoleStyle}">
            <Grid.RenderTransform>
                <ScaleTransform x:Name="consoleScale" ScaleY="0" />
            </Grid.RenderTransform>

            <ListView
                VerticalAlignment="Bottom"
                FontSize="16"
                Foreground="{DynamicResource MaterialDesignDarkForeground}"
                ItemsSource="{Binding LogPanel.LogItems}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Content}" />
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>

    </Grid>
</Window>
